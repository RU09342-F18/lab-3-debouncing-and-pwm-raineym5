   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 103               	.global	__vector_11
 105               	__vector_11:
 106               		.stabd	46,0,0
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <stdint.h>
   3:main.c        **** #include <avr/interrupt.h>
   4:main.c        **** 
   5:main.c        **** #define F_CPU 8000000UL 
   6:main.c        **** 
   7:main.c        **** 
   8:main.c        **** //LED: PB4
   9:main.c        **** //BUT: PB3
  10:main.c        **** //LOG LED values: 125-125log(10-n) for n=1:10
  11:main.c        **** //1: 0
  12:main.c        **** //2: 6
  13:main.c        **** //3: 12
  14:main.c        **** //4: 19
  15:main.c        **** //5: 26
  16:main.c        **** //6: 38
  17:main.c        **** //7: 50
  18:main.c        **** //8: 65
  19:main.c        **** //9: 87
  20:main.c        **** //10:125
  21:main.c        **** 
  22:main.c        **** volatile uint8_t lookupcounter = 4, incrementer=0,hit=0,miss=0,totalcounter=0;
  23:main.c        **** const uint8_t LOOKUP[] = {0,6,12,19,26,38,50,65,87,125};
  24:main.c        **** ISR(TIMER0_COMPB_vect){
 108               	.LM0:
 109               	.LFBB1:
 110 0000 1F92      		push r1
 111 0002 0F92      		push r0
 112 0004 0FB6      		in r0,__SREG__
 113 0006 0F92      		push r0
 114 0008 1124      		clr __zero_reg__
 115 000a 8F93      		push r24
 116               	/* prologue: Signal */
 117               	/* frame size = 0 */
 118               	/* stack size = 4 */
 119               	.L__stack_usage = 4
  25:main.c        **** 	if(OCR0B != 125)
 121               	.LM1:
 122 000c 88B5      		in r24,0x28
 123 000e 8D37      		cpi r24,lo8(125)
 124 0010 01F0      		breq .L1
  26:main.c        **** 		PORTB &= ~(1<<PB4);
 126               	.LM2:
 127 0012 C498      		cbi 0x18,4
 128               	.L1:
 129               	/* epilogue start */
  27:main.c        **** }
 131               	.LM3:
 132 0014 8F91      		pop r24
 133 0016 0F90      		pop r0
 134 0018 0FBE      		out __SREG__,r0
 135 001a 0F90      		pop r0
 136 001c 1F90      		pop r1
 137 001e 1895      		reti
 139               	.Lscope1:
 141               		.stabd	78,0,0
 143               	.global	__vector_10
 145               	__vector_10:
 146               		.stabd	46,0,0
  28:main.c        **** ISR(TIMER0_COMPA_vect){
 148               	.LM4:
 149               	.LFBB2:
 150 0020 1F92      		push r1
 151 0022 0F92      		push r0
 152 0024 0FB6      		in r0,__SREG__
 153 0026 0F92      		push r0
 154 0028 1124      		clr __zero_reg__
 155 002a 8F93      		push r24
 156               	/* prologue: Signal */
 157               	/* frame size = 0 */
 158               	/* stack size = 4 */
 159               	.L__stack_usage = 4
  29:main.c        **** 	if(OCR0B != 0)
 161               	.LM5:
 162 002c 88B5      		in r24,0x28
 163 002e 8111      		cpse r24,__zero_reg__
  30:main.c        **** 		PORTB |= (1<<PB4);
 165               	.LM6:
 166 0030 C49A      		sbi 0x18,4
 167               	.L7:
 168               	/* epilogue start */
  31:main.c        **** }
 170               	.LM7:
 171 0032 8F91      		pop r24
 172 0034 0F90      		pop r0
 173 0036 0FBE      		out __SREG__,r0
 174 0038 0F90      		pop r0
 175 003a 1F90      		pop r1
 176 003c 1895      		reti
 178               	.Lscope2:
 180               		.stabd	78,0,0
 182               	.global	__vector_2
 184               	__vector_2:
 185               		.stabd	46,0,0
  32:main.c        **** ISR(PCINT0_vect){
 187               	.LM8:
 188               	.LFBB3:
 189 003e 1F92      		push r1
 190 0040 0F92      		push r0
 191 0042 0FB6      		in r0,__SREG__
 192 0044 0F92      		push r0
 193 0046 1124      		clr __zero_reg__
 194 0048 8F93      		push r24
 195               	/* prologue: Signal */
 196               	/* frame size = 0 */
 197               	/* stack size = 4 */
 198               	.L__stack_usage = 4
  33:main.c        **** 
  34:main.c        **** 	if((PINB & (1<<PB3))==0){
 200               	.LM9:
 201 004a B399      		sbic 0x16,3
 202 004c 00C0      		rjmp .L12
  35:main.c        **** 
  36:main.c        ****     	GIMSK =0;//clear pin change interrupts
 204               	.LM10:
 205 004e 1BBE      		out 0x3b,__zero_reg__
  37:main.c        **** 		TCNT1 = 0;
 207               	.LM11:
 208 0050 1FBC      		out 0x2f,__zero_reg__
  38:main.c        **** 	    TIMSK |= (1<<TOIE1);//set timer overflow interrupts
 210               	.LM12:
 211 0052 89B7      		in r24,0x39
 212 0054 8460      		ori r24,lo8(4)
 213 0056 89BF      		out 0x39,r24
  39:main.c        **** 	    TCCR1 = (1<<CS12);//set clock divider (8) for timer
 215               	.LM13:
 216 0058 84E0      		ldi r24,lo8(4)
 217 005a 80BF      		out 0x30,r24
 218               	.L12:
 219               	/* epilogue start */
  40:main.c        **** 	}
  41:main.c        **** }
 221               	.LM14:
 222 005c 8F91      		pop r24
 223 005e 0F90      		pop r0
 224 0060 0FBE      		out __SREG__,r0
 225 0062 0F90      		pop r0
 226 0064 1F90      		pop r1
 227 0066 1895      		reti
 229               	.Lscope3:
 231               		.stabd	78,0,0
 233               	.global	__vector_4
 235               	__vector_4:
 236               		.stabd	46,0,0
  42:main.c        **** 
  43:main.c        **** ISR(TIMER1_OVF_vect){
 238               	.LM15:
 239               	.LFBB4:
 240 0068 1F92      		push r1
 241 006a 0F92      		push r0
 242 006c 0FB6      		in r0,__SREG__
 243 006e 0F92      		push r0
 244 0070 1124      		clr __zero_reg__
 245 0072 8F93      		push r24
 246 0074 9F93      		push r25
 247 0076 EF93      		push r30
 248 0078 FF93      		push r31
 249               	/* prologue: Signal */
 250               	/* frame size = 0 */
 251               	/* stack size = 7 */
 252               	.L__stack_usage = 7
  44:main.c        **** 	totalcounter++;
 254               	.LM16:
 255 007a 8091 0000 		lds r24,totalcounter
 256 007e 8F5F      		subi r24,lo8(-(1))
 257 0080 8093 0000 		sts totalcounter,r24
  45:main.c        **** 	if((PINB & (1<<PB3))==0)
 259               	.LM17:
 260 0084 B399      		sbic 0x16,3
 261 0086 00C0      		rjmp .L15
  46:main.c        **** 		hit++;
 263               	.LM18:
 264 0088 8091 0000 		lds r24,hit
 265 008c 8F5F      		subi r24,lo8(-(1))
 266 008e 8093 0000 		sts hit,r24
  47:main.c        **** 	else
  48:main.c        **** 		miss++;
  49:main.c        **** 	if(totalcounter==30){
 268               	.LM19:
 269 0092 8091 0000 		lds r24,totalcounter
 270 0096 8E31      		cpi r24,lo8(30)
 271 0098 01F0      		breq .L20
 272               	.L14:
 273               	/* epilogue start */
  50:main.c        **** 		if(hit >= miss){
  51:main.c        **** 		
  52:main.c        **** 			lookupcounter++;
  53:main.c        **** 			if(lookupcounter == 10)
  54:main.c        **** 				lookupcounter=0;
  55:main.c        **** 			OCR0B = LOOKUP[lookupcounter];
  56:main.c        **** 			
  57:main.c        **** 		}
  58:main.c        **** 		TCCR1 = 0;//kill timer
  59:main.c        **** 		GIMSK |= (1<<PCIE);//set pin change interrupts
  60:main.c        **** 		hit=0;
  61:main.c        **** 		miss=0;
  62:main.c        **** 		totalcounter=0;
  63:main.c        **** 	}
  64:main.c        **** }
 275               	.LM20:
 276 009a FF91      		pop r31
 277 009c EF91      		pop r30
 278 009e 9F91      		pop r25
 279 00a0 8F91      		pop r24
 280 00a2 0F90      		pop r0
 281 00a4 0FBE      		out __SREG__,r0
 282 00a6 0F90      		pop r0
 283 00a8 1F90      		pop r1
 284 00aa 1895      		reti
 285               	.L15:
  48:main.c        **** 	if(totalcounter==30){
 287               	.LM21:
 288 00ac 8091 0000 		lds r24,miss
 289 00b0 8F5F      		subi r24,lo8(-(1))
 290 00b2 8093 0000 		sts miss,r24
  49:main.c        **** 		if(hit >= miss){
 292               	.LM22:
 293 00b6 8091 0000 		lds r24,totalcounter
 294 00ba 8E31      		cpi r24,lo8(30)
 295 00bc 01F4      		brne .L14
 296               	.L20:
  50:main.c        **** 		if(hit >= miss){
 298               	.LM23:
 299 00be 9091 0000 		lds r25,hit
 300 00c2 8091 0000 		lds r24,miss
 301 00c6 9817      		cp r25,r24
 302 00c8 00F0      		brlo .L18
  52:main.c        **** 			if(lookupcounter == 10)
 304               	.LM24:
 305 00ca 8091 0000 		lds r24,lookupcounter
 306 00ce 8F5F      		subi r24,lo8(-(1))
 307 00d0 8093 0000 		sts lookupcounter,r24
  53:main.c        **** 				lookupcounter=0;
 309               	.LM25:
 310 00d4 8091 0000 		lds r24,lookupcounter
 311 00d8 8A30      		cpi r24,lo8(10)
 312 00da 01F0      		breq .L21
 313               	.L19:
  55:main.c        **** 			
 315               	.LM26:
 316 00dc E091 0000 		lds r30,lookupcounter
 317 00e0 F0E0      		ldi r31,0
 318 00e2 E050      		subi r30,lo8(-(LOOKUP))
 319 00e4 F040      		sbci r31,hi8(-(LOOKUP))
 320 00e6 8081      		ld r24,Z
 321 00e8 88BD      		out 0x28,r24
 322               	.L18:
  58:main.c        **** 		GIMSK |= (1<<PCIE);//set pin change interrupts
 324               	.LM27:
 325 00ea 10BE      		out 0x30,__zero_reg__
  59:main.c        **** 		hit=0;
 327               	.LM28:
 328 00ec 8BB7      		in r24,0x3b
 329 00ee 8062      		ori r24,lo8(32)
 330 00f0 8BBF      		out 0x3b,r24
  60:main.c        **** 		miss=0;
 332               	.LM29:
 333 00f2 1092 0000 		sts hit,__zero_reg__
  61:main.c        **** 		totalcounter=0;
 335               	.LM30:
 336 00f6 1092 0000 		sts miss,__zero_reg__
  62:main.c        **** 	}
 338               	.LM31:
 339 00fa 1092 0000 		sts totalcounter,__zero_reg__
 340 00fe 00C0      		rjmp .L14
 341               	.L21:
  54:main.c        **** 			OCR0B = LOOKUP[lookupcounter];
 343               	.LM32:
 344 0100 1092 0000 		sts lookupcounter,__zero_reg__
 345 0104 00C0      		rjmp .L19
 347               	.Lscope4:
 349               		.stabd	78,0,0
 350               		.section	.text.startup,"ax",@progbits
 352               	.global	main
 354               	main:
 355               		.stabd	46,0,0
  65:main.c        **** int main(void){
 357               	.LM33:
 358               	.LFBB5:
 359               	/* prologue: function */
 360               	/* frame size = 0 */
 361               	/* stack size = 0 */
 362               	.L__stack_usage = 0
  66:main.c        **** 
  67:main.c        ****     DDRB = ~(1<<PB3);//all outputs except PB3
 364               	.LM34:
 365 0000 87EF      		ldi r24,lo8(-9)
 366 0002 87BB      		out 0x17,r24
  68:main.c        ****     OCR0A = 125;//CTC value for 1 KHz
 368               	.LM35:
 369 0004 8DE7      		ldi r24,lo8(125)
 370 0006 89BD      		out 0x29,r24
  69:main.c        ****     OCR0B = 62;//CTC value for 50% duty cycle
 372               	.LM36:
 373 0008 8EE3      		ldi r24,lo8(62)
 374 000a 88BD      		out 0x28,r24
  70:main.c        ****     PORTB = (1<<PB3);//turn on pullups
 376               	.LM37:
 377 000c 88E0      		ldi r24,lo8(8)
 378 000e 88BB      		out 0x18,r24
  71:main.c        ****     
  72:main.c        ****     GIMSK = (1<<PCIE);//set pin change interrupts
 380               	.LM38:
 381 0010 90E2      		ldi r25,lo8(32)
 382 0012 9BBF      		out 0x3b,r25
  73:main.c        ****     PCMSK = (1<<PCINT3);//set pin change interrupt on pin PB3 in specific
 384               	.LM39:
 385 0014 85BB      		out 0x15,r24
  74:main.c        ****     TCCR0A = (1<<WGM01);//clear timer on compare with OCR0A
 387               	.LM40:
 388 0016 82E0      		ldi r24,lo8(2)
 389 0018 8ABD      		out 0x2a,r24
  75:main.c        ****     TCCR0B = (1<<CS01)|(1<<CS00);///64 prescaler
 391               	.LM41:
 392 001a 83E0      		ldi r24,lo8(3)
 393 001c 83BF      		out 0x33,r24
  76:main.c        ****     TIMSK =(1<<OCIE0A)|(1<<OCIE0B);//timer match b interrupt
 395               	.LM42:
 396 001e 88E1      		ldi r24,lo8(24)
 397 0020 89BF      		out 0x39,r24
 398               	.L23:
  77:main.c        **** 
  78:main.c        ****     while(1){
  79:main.c        ****     	sei();
 400               	.LM43:
 401               	/* #APP */
 402               	 ;  79 "main.c" 1
 403 0022 7894      		sei
 404               	 ;  0 "" 2
  80:main.c        ****     	asm("sleep");
 406               	.LM44:
 407               	 ;  80 "main.c" 1
 408 0024 8895      		sleep
 409               	 ;  0 "" 2
  81:main.c        **** 	}
 411               	.LM45:
 412               	/* #NOAPP */
 413 0026 00C0      		rjmp .L23
 415               	.Lscope5:
 417               		.stabd	78,0,0
 418               	.global	LOOKUP
 419               		.section	.rodata
 422               	LOOKUP:
 423 0000 00        		.byte	0
 424 0001 06        		.byte	6
 425 0002 0C        		.byte	12
 426 0003 13        		.byte	19
 427 0004 1A        		.byte	26
 428 0005 26        		.byte	38
 429 0006 32        		.byte	50
 430 0007 41        		.byte	65
 431 0008 57        		.byte	87
 432 0009 7D        		.byte	125
 433               	.global	totalcounter
 434               		.section .bss
 437               	totalcounter:
 438 0000 00        		.zero	1
 439               	.global	miss
 442               	miss:
 443 0001 00        		.zero	1
 444               	.global	hit
 447               	hit:
 448 0002 00        		.zero	1
 449               	.global	incrementer
 452               	incrementer:
 453 0003 00        		.zero	1
 454               	.global	lookupcounter
 455               		.data
 458               	lookupcounter:
 459 0000 04        		.byte	4
 466               		.text
 468               	.Letext0:
 469               		.ident	"GCC: (GNU) 4.9.2"
 470               	.global __do_copy_data
 471               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccHU60vv.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccHU60vv.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccHU60vv.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccHU60vv.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccHU60vv.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccHU60vv.s:105    .text:0000000000000000 __vector_11
     /tmp/ccHU60vv.s:145    .text:0000000000000020 __vector_10
     /tmp/ccHU60vv.s:184    .text:000000000000003e __vector_2
     /tmp/ccHU60vv.s:235    .text:0000000000000068 __vector_4
     /tmp/ccHU60vv.s:437    .bss:0000000000000000 totalcounter
     /tmp/ccHU60vv.s:447    .bss:0000000000000002 hit
     /tmp/ccHU60vv.s:442    .bss:0000000000000001 miss
     /tmp/ccHU60vv.s:458    .data:0000000000000000 lookupcounter
     /tmp/ccHU60vv.s:422    .rodata:0000000000000000 LOOKUP
     /tmp/ccHU60vv.s:354    .text.startup:0000000000000000 main
     /tmp/ccHU60vv.s:452    .bss:0000000000000003 incrementer

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
